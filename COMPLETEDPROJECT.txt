#include "DHT.h"
#include<ESP8266WiFi.h>
#include<WiFiClient.h>
#include <ThingSpeak.h>  //To connect our thingspeak channel with the esp8266 through this code.
#include<ESP8266WebServer.h>
#include<ESP8266mDNS.h>
#include<SPI.h>
#define DHTPIN D2
#define DHTTYPE DHT11
int sensorpin=A0;
int outputvalue;
DHT dht(DHTPIN, DHTTYPE);

float humidityData;
float temperatureData;

const char* ssid = "*wifi name*";
const char* password="*your wifi password*";
char server[]="api.thingspeak.com";
WiFiClient client;
void setup()
{
  Serial.begin(9600);
  delay(10);
  dht.begin();
  Serial.println();
   Serial.println();
   Serial.print("Connecting to ");
   Serial.println(ssid);
  
   WiFi.begin(ssid, password);  // Connecting esp to wifi
   
   while (WiFi.status() != WL_CONNECTED)  //This loop will work untill esp connects to the wifi
   {   
   delay(500);
   Serial.print(".");
   }
    Serial.println("");
   Serial.println("WiFi connected");
   Serial.println("Server Started");
    Serial.println(WiFi.localIP());
    delay(1000);
    Serial.println("Connecting.....");
    
}
void loop() {
  // put your main code here, to run repeatedly:
humidityData= dht.readHumidity();
temperatureData=dht.readTemperature();
outputvalue=analogRead(sensorpin);
outputvalue=map(outputvalue,550,0,0,100);
Sending_To_thingspeak();
delay(30000);
}void Sending_To_thingspeak()
{
  if (client.connect(server, 80)){
  Serial.println("Connected");
  Serial.print("GET /update?api_key=*********api key*******&field1=");
  client.print("GET /update?api_key=********api key********&field1=");
  Serial.print(humidityData);
  client.print(humidityData);
  client.print("&field2=");
  Serial.println("&field2=");
  client.print(temperatureData);
  Serial.println(temperatureData);
  client.print("&field3=");
  Serial.println("&field3=");
  client.print(outputvalue);
  Serial.println(outputvalue);
  client.print(" ");
  client.print("HTTP/1.1");
  client.println();
  client.println("Host: api.thingspeak.com");
  client.println("Connection: close");
  client.println();
  }
  else{
    Serial.println("Connection failed");
  }
}